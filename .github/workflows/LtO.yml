name: Kernel Build with ThinLTO (Stock Config)

on:
  workflow_dispatch:
  push:
    branches: [ stable ]

env:
  KERNEL_DIR: "kernel"
  CLANG_DIR: "clang-6443078"
  THINLTO_CACHE: "thinlto_cache"
  DEFCONFIG: "stock_defconfig"  # Using stock config instead of vendor

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 180

    steps:
    - name: Checkout kernel source
      uses: actions/checkout@v4
      with:
        repository: Ponleuz12/kernel_realme_sm4250
        ref: stable
        path: ${{ env.KERNEL_DIR }}

    - name: Checkout Clang toolchain
      uses: actions/checkout@v4
      with:
        repository: techyminati/android_prebuilts_clang_host_linux-x86_clang-6443078
        ref: 11.0.1
        path: ${{ env.CLANG_DIR }}

    - name: Install dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y \
          build-essential flex bison libssl-dev libelf-dev \
          bc python3 git make gcc zip

    - name: Setup environment
      run: |
        # Verify defconfig exists
        cd ${{ env.KERNEL_DIR }}
        if [ ! -f "arch/arm64/configs/${{ env.DEFCONFIG }}" ]; then
          echo "::error::Defconfig ${{ env.DEFCONFIG }} not found!"
          ls arch/arm64/configs/
          exit 1
        fi

        # Set up paths
        echo "CLANG_PATH=${{ github.workspace }}/${{ env.CLANG_DIR }}/bin" >> $GITHUB_ENV
        echo "PATH=$CLANG_PATH:$PATH" >> $GITHUB_ENV

    - name: Build with ThinLTO
      run: |
        cd ${{ env.KERNEL_DIR }}
        
        export ARCH=arm64
        export SUBARCH=arm64
        export LLVM=1
        export LLVM_IAS=1
        export CLANG_TRIPLE=aarch64-linux-gnu-
        export CROSS_COMPILE=aarch64-linux-gnu-
        export CROSS_COMPILE_ARM32=arm-linux-gnueabi-
        
        # Clean previous builds
        make O=out clean && rm -rf out
        
        # Enable ThinLTO
        echo "CONFIG_LTO=y" >> arch/arm64/configs/${{ env.DEFCONFIG }}
        echo "CONFIG_LTO_CLANG=y" >> arch/arm64/configs/${{ env.DEFCONFIG }}
        echo "CONFIG_THINLTO=y" >> arch/arm64/configs/${{ env.DEFCONFIG }}
        
        # Build commands
        make O=out ${{ env.DEFCONFIG }}
        
        make -j$(nproc --all) O=out \
          CC="clang" \
          LD="ld.lld" \
          AR="llvm-ar" \
          NM="llvm-nm" \
          STRIP="llvm-strip" \
          OBJCOPY="llvm-objcopy" \
          KCFLAGS="-mthinlto" \
          2>&1 | tee build.log

    - name: Verify build
      run: |
        cd ${{ env.KERNEL_DIR }}
        if [ -f "out/arch/arm64/boot/Image.gz-dtb" ]; then
          echo "::notice::Kernel built successfully!"
          ls -lh out/arch/arm64/boot/
        else
          echo "::error::Build failed - no kernel image found"
          grep -i error build.log || echo "No obvious errors in log"
          exit 1
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: kernel-thinlto-build
        path: |
          ${{ env.KERNEL_DIR }}/out/arch/arm64/boot/Image.gz-dtb
          ${{ env.KERNEL_DIR }}/build.log
