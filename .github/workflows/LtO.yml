name: Kernel Build with LTO

on:
  push:
    branches: [ stable ]
  pull_request:
    branches: [ stable ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
    - name: Checkout kernel source
      uses: actions/checkout@v3
      with:
        repository: Ponleuz12/kernel_realme_sm4250
        ref: stable
        path: kernel

    - name: Checkout Clang toolchain
      uses: actions/checkout@v3
      with:
        repository: techyminati/android_prebuilts_clang_host_linux-x86_clang-6443078
        ref: 11.0.1
        path: clang

    - name: Set up environment
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          flex \
          bison \
          libssl-dev \
          libelf-dev \
          bc \
          python3 \
          git

    - name: Set up build environment
      run: |
        export ARCH=arm64
        export SUBARCH=arm64
        export PATH=$(pwd)/clang/bin:$PATH
        export CLANG_TRIPLE=aarch64-linux-gnu-
        export CROSS_COMPILE=$(pwd)/clang/bin/aarch64-linux-gnu-
        export CROSS_COMPILE_ARM32=$(pwd)/clang/bin/arm-linux-gnueabi-
        
        cd kernel
        # Enable LTO in the kernel config
        echo "CONFIG_LTO=y" >> arch/$ARCH/configs/vendor/${DEVICE}_defconfig
        echo "CONFIG_LTO_CLANG=y" >> arch/$ARCH/configs/vendor/${DEVICE}_defconfig
        echo "CONFIG_THINLTO=y" >> arch/$ARCH/configs/vendor/${DEVICE}_defconfig

    - name: Build kernel
      run: |
        cd kernel
        make O=out vendor/${DEVICE}_defconfig
        make -j$(nproc --all) O=out \
          CC=clang \
          LD=ld.lld \
          AR=llvm-ar \
          NM=llvm-nm \
          OBJCOPY=llvm-objcopy \
          OBJDUMP=llvm-objdump \
          STRIP=llvm-strip \
          CLANG_TRIPLE=aarch64-linux-gnu- \
          CROSS_COMPILE=aarch64-linux-gnu- \
          CROSS_COMPILE_ARM32=arm-linux-gnueabi- \
          LLVM=1 \
          LLVM_IAS=1
        
        # Package the kernel image
        cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3/
        cd AnyKernel3 && zip -r9 kernel.zip * -x .gitignore README.md *placeholder

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: kernel-lto-build
        path: kernel/AnyKernel3/kernel.zip
