name: Build Kernel (LLVM ThinLTO)

on:
  workflow_dispatch:
    inputs:
      KERNEL_REPO:
        description: 'Kernel source repository URL'
        required: true
        default: 'https://github.com/Ponleuz12/kernel_realme_sm4250'
      KERNEL_BRANCH:
        description: 'Branch'
        required: true
        default: 'stable'
      DEFCONFIG:
        description: 'Defconfig file'
        required: true
        default: 'stock_defconfig'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      CLANG_URL: https://github.com/kdrag0n/proton-clang.git
      CLANG_DIR: clang
      ARCH: arm64
      LLVM: 1
      LTO: thin
      LD: ld.lld
      KBUILD_BUILD_USER: Ponleuz
      KBUILD_BUILD_HOST: GitHub

    steps:
    - name: Checkout Kernel Source
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.inputs.KERNEL_REPO }}
        ref: ${{ github.event.inputs.KERNEL_BRANCH }}

    - name: Clone Proton Clang (LLVM)
      run: |
        git clone --depth=1 $CLANG_URL $CLANG_DIR

    - name: Set up environment
      run: |
        echo "PATH=$GITHUB_WORKSPACE/$CLANG_DIR/bin:$PATH" >> $GITHUB_ENV
        echo "CROSS_COMPILE=aarch64-linux-gnu-" >> $GITHUB_ENV
        echo "CC=clang" >> $GITHUB_ENV

    - name: Configure Kernel
      run: |
        make O=out ARCH=$ARCH ${DEFCONFIG}

    - name: Enable ThinLTO in .config
      run: |
        scripts/config --file out/.config \
          -d LTO_NONE \
          -e LTO \
          -e LTO_CLANG \
          -e THINLTO \
          -e LD_LLD \
          -e CC_HAS_THINLTO \
          -e CLANG_LTO \
          -e CLANG_LTO_THIN \
          -e HAVE_LD_THINLTO \
          -e CONFIG_UNWINDER_FRAME_POINTER
        make O=out ARCH=$ARCH olddefconfig

    - name: Build Kernel with ThinLTO
      run: |
        make -j$(nproc --all) O=out \
          ARCH=$ARCH \
          LLVM=$LLVM \
          LLVM_IAS=1 \
          LD=$LD \
          CC=clang \
          CLANG_TRIPLE=aarch64-linux-gnu- \
          CROSS_COMPILE=aarch64-linux-gnu- \
          CROSS_COMPILE_ARM32=arm-linux-gnueabi-

    - name: Upload zImage or Image.gz
      uses: actions/upload-artifact@v4
      with:
        name: Kernel Image
        path: |
          out/arch/arm64/boot/Image.gz
          out/arch/arm64/boot/Image
